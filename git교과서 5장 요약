[곽민우(5~6]
5 -내려받기-
원격 저장소에서 커밋된 코드를 내려받는 방법은 "자동으로 내려받기"와"수동으로 내려받기"가 있다.

*자동으로 내려받기: CLONE,PULL
  CLONE(복제) -복제는 기존 저장소를 이용하여 새로운 저장소를 생성하는 방법 중 하나.
              -CLONE명령어는 초기화 INIT명령어 외에 원격 서버 접속에 필요한 추가 설정을 자동으로 수행한다.
              -서버의 연결 설정을 마친 후 서버 안에 있는 모든 커밋된 코드 이렵들을 한 번에 내려받는다.
              -로컬 저장소를 생성한 후, 처음으로 서버에서 코드를 내려받을 때 편리
              EX)
              [로컬저장소] > [원격저장소] > [로컬저장소]


[염진섭(7~8)]
7 -순서-
7.1 최신상태
원격 저장소에 푸시 하려면 자신의 로컬 저장소를 최신 상태로 유지해야함.

커밋이 순차적이지 않을 때 깃은 푸시 동작을 거부.

푸시 동작이 거부되면 풀 또는 패치 작업으로 자신의 로컬 저장소를 갱신해 주어야 함.

7.2 충돌방지
깃이 최신상태에서만 푸시를 허용하는 것은 충돌을 방지하기 위해서이다.

원격 저장소의 커밋을 내려받는 풀 작업은 내려받은 커밋들을 현재 브랜치로 자동 병합합니다. 
커밋 내용이 순차적이지 않다면 병합 과정에서 충돌 발생.

최대한 충돌을 피할 수 있는 방법은 자신의 저장소와 원격 저장소의 상태를 자주 최신으로 유지하느 것.

권장 순서 : pull > coding > commit > pull > push

소스트리를 사용하면 푸시 하기 전 자신의 저장소와 어던 차이점이 있는지 쉽게 확인 가능.

인증 정보 캐시
호스팅 원격 저장소를 이용할 때는 아이디와 비밀번호가 있어야 접속 가능.

매번 아이디와 비밀번호를 입력하는 번거로움을 줄이기 위해 깃은 인증 정보 캐시(credential cache) 기능을 이용하여 아이디와 비밀번호를 임시적으로 보관할 수 있게함.
이 기능을 활성화하려면 환경설정이 필요.
$git config credential.helper cache

8 정리
깃은 다양한 종류의 서버를 지원하여 깃 서버를 직접 만들 수도 있고, 인기 있는 깃 호스팅 서버를 이용할 수 있다.

깃은 서버 역활을 수행하는 원격 저장소와 커밋 정보들을 주고 받는다.

원격 저장소 기능은 좀 더 많은 사람이 깃을 사용하게 하는 촉매제가 되었다.

오픈 소스는 깃과 공개된 원격 저장소를 사용하여 활발하게 수많은 사람과 협업 할 수있는 장점들을 제공한다.
그래서 깃은 오픈 소스를 활성화하는 데 가장 많은 기여를 하는 협업 툴이 되었다.
